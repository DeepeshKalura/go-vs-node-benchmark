# Define our custom network at the top level
networks:
  benchmark-net:
    driver: bridge

services:
  mongo-db:
    image: mongo:latest
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=benchmark
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks: 
      - benchmark-net

  mongo-seeder:
    build: ./mongo-seeder
    container_name: mongo-seeder
    depends_on:
      mongo-db:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://mongo-db:27017/benchmark
    networks: 
      - benchmark-net

  node-app:
    build: ./node-app
    container_name: node-app
    ports:
      - "8080:3000" 
    depends_on:
      mongo-db:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://mongo-db:27017/benchmark
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    networks: 
      - benchmark-net

  go-app:
    build: ./go-app
    container_name: go-app
    ports:
      - "8081:3001"
    depends_on:
      mongo-db:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://mongo-db:27017/benchmark
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    networks: 
      - benchmark-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8088:8080" # Mapped to host 8088 to avoid conflict with node-app
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - benchmark-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-remote-write-receiver' 
    networks:
      - benchmark-net

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000" # Mapped to host 3000
    depends_on:
      - prometheus
    networks:
      - benchmark-net
    volumes:
      - grafana-data:/var/lib/grafana

  k6-tester:
    image: grafana/k6
    container_name: k6-tester
    volumes:
      - ./k6-tester:/scripts
    command: " " 
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
    depends_on:
      - node-app
      - go-app
      - prometheus
    networks: 
      - benchmark-net

volumes:
  mongo-data:
  prometheus-data:
  grafana-data: